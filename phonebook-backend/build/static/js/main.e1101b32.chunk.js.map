{"version":3,"sources":["components/services.js","components/App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newPerson","post","id","delete","aPerson","put","PhonebookNames","persons","handleDelete","map","person","key","name","number","onClick","Notification","message","type","className","text","App","useState","setPersons","newName","setNewName","newNumber","setNewNumber","newFilter","setNewFilter","notification","setNotification","useEffect","phonebookService","filteredPerson","filter","toLowerCase","includes","onSubmit","event","preventDefault","personExist","length","window","confirm","indexPersonUpdate","indexOf","updatedPhonebook","updatePerson","updatedPerson","setTimeout","new_person","concat","value","onChange","target","PersonToDelete","find","indexPersonDelete","catch","error","newPersons","splice","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e1101b32.chunk.js","sourcesContent":["import axios from 'axios';\n\n// const baseUrl = 'http://localhost:3001/api/persons'\nconst baseUrl = 'api/persons'\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response=>response.data)\n}\n\nconst addPerson = (newPerson) => {\n    const request = axios.post(baseUrl, newPerson)\n    return request.then(response=>response.data)\n}\n\nconst deletePerson = (id) => {\n    const request = axios.delete(`${baseUrl}/${id}`)\n    return request.then(response=>response.data)\n}\n\nconst updatePerson = (id, aPerson) => {\n    const request = axios.put(`${baseUrl}/${id}`, aPerson)\n    return request.then(response=>response.data)\n}\n\nexport default { getAll, addPerson, deletePerson, updatePerson }","import React, { useEffect, useState } from 'react'\nimport phonebookService from './services'\n\nconst PhonebookNames = ({persons, handleDelete}) => {\n    return (\n        <div>\n            {persons.map(person=>\n                <p key={person.name}>{person.name} {person.number} <button onClick={()=>handleDelete(person.id)}>delete</button></p>    \n            )}\n        </div>\n    )\n}\n\nconst Notification = ({message}) => {\n  if (message.type === 'alert') {\n    return (\n      <div className=\"alert\">\n        {message.text}\n      </div>\n    )\n  } else {\n    return (\n      <div className=\"error\">\n        {message.text}\n      </div>\n    )\n  }\n}\n\nconst App = () => {\n  const [ persons, setPersons] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber] = useState('')\n  const [ newFilter, setNewFilter] = useState('')\n  const [ notification, setNotification] = useState({})\n\n  useEffect(()=>{\n    phonebookService\n      .getAll()\n      .then(persons=>setPersons(persons))\n  }, [])\n\n  const handleAddName = (event) => {\n    event.preventDefault()\n    const personExist = persons.filter((person)=>person.name===newName)\n    \n    if (personExist.length>0){\n        if (window.confirm(`${newName} is already added to phonebook, replace the old number with new one?`)){\n          const indexPersonUpdate = persons.indexOf(personExist[0])\n          const updatedPhonebook = [...persons]\n          const updatePerson = { name: personExist[0].name, number: newNumber }\n          const res = phonebookService.updatePerson(personExist[0].id, updatePerson)\n          res.then(updatedPerson=>{\n            updatedPhonebook[indexPersonUpdate].number = updatedPerson.number\n            setPersons(updatedPhonebook)\n            setNotification({text:`${updatePerson[0].name} updated.`, type:'alert'})\n            setTimeout(()=>setNotification({}), 3000)\n          })\n        } else { \n          // user dont want to update number\n        }\n    } else {\n        const new_person = { name: newName, number: newNumber }\n        const res = phonebookService.addPerson(new_person)\n        res.then(newPerson=>setPersons(persons.concat(newPerson)))\n        setNotification({text:`${new_person.name} added.`, type:'alert'})\n        setTimeout(()=>setNotification({}), 3000)\n    }\n    setNewName('')\n    setNewNumber('')\n  }\n\n  const handleDeleteName = (id) => {\n    const PersonToDelete = persons.find(person=>person.id === id)\n    const indexPersonDelete = persons.indexOf(PersonToDelete)\n    if (window.confirm(`Delete ${PersonToDelete.name}?`)){\n      const res = phonebookService.deletePerson(id)\n      res.catch(error=>{\n        setNotification({text:`something wrong / data does not exist.`, type:'error'})\n        setTimeout(()=>setNotification({}), 3000)\n      })\n      const newPersons = [...persons]\n      newPersons.splice(indexPersonDelete, 1)\n      setPersons(newPersons)\n      setNotification({text:`${PersonToDelete.name} deleted.`, type:'alert'})\n      setTimeout(()=>setNotification({}), 5000)\n    }\n    setNewName('')\n    setNewNumber('')\n  }\n\n  const handleFormNameChange = (event) => {\n      setNewName(event.target.value)\n  }\n\n  const handleFormNumChange = (event) => {\n      setNewNumber(event.target.value)\n  }\n\n  const handleFilterChange = (event) => {\n      setNewFilter(event.target.value)\n  }\n\n  const filteredPerson = newFilter === ''\n    ? persons\n    : persons.filter((person)=>person.name.toLowerCase().includes(newFilter.toLowerCase()))\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={notification}/>\n      <form onSubmit={handleAddName}>\n        <div>\n          name: <input value={newName} onChange={handleFormNameChange}/><br/>\n          number: <input value={newNumber} onChange={handleFormNumChange}/>\n        </div>\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n      </form>\n      <h2>Numbers</h2>\n      filter: <input value={newFilter} onChange={handleFilterChange}/>\n      <PhonebookNames persons={filteredPerson} handleDelete={handleDeleteName}/>\n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport './index.css'\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}